{"version":3,"sources":["components/Social.js","components/Footer.js","components/Title.js","components/About.js","pages/Home.js","components/ProjectEntry.js","pages/Projects.js","pages/Contact.js","App.js","serviceWorker.js","index.js"],"names":["social","props","class","href","link","icon","fixedWidth","footer","Container","className","fluid","Row","Social","Title","Jumbotron","Col","title","subTitle","text","About","Image","src","rounded","Home","ProjectEntry","description","image","alt","width","height","Projects","Contact","send","event","preventDefault","console","log","target","setState","disabled","Axios","post","state","then","res","data","success","isDisabled","result","catch","err","emailSent","update","string","value","field","name","email","message","this","md","Form","onSubmit","Group","Label","htmlFor","Control","id","type","onChange","rows","as","Button","variant","React","Component","App","library","add","fab","headerLinks","path","home","projects","contact","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","to","exact","render","Footer","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.1029b56d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nfunction social(props){\r\n\r\n  return(\r\n\r\n    <a class=\"social btn btn-social-icon btn-sm btn-primary\" href={props.link}>\r\n      <FontAwesomeIcon icon={['fab', props.icon]} fixedWidth />\r\n    </a>\r\n\r\n  );\r\n\r\n} \r\nexport default social;","import React from 'react';\r\nimport {\r\n  Container,\r\n  Row\r\n} from 'react-bootstrap';\r\n\r\nimport Social from './Social';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction footer(){\r\n\r\n  return(\r\n    <Container className=\"footerContainer\" fluid={true}>\r\n      <footer className=\"mt-5\" class=\"outerfoot\">\r\n        <Container fluid={true}> \r\n          <Row className='justify-content-md-left foot'>\r\n            Daniel Santaguida<br/>\r\n            Ontario, Canada<br/>\r\n            (647)-773-6186<br/>\r\n            dsantaguida@outlook.com<br/>\r\n            <Social icon ='twitter' link='https://twitter.com/dansantaguida'/>\r\n            <Social icon ='instagram' link='https://instagram.com/dansantaguida'/>\r\n            <Social icon ='linkedin' link='https://www.linkedin.com/in/daniel-santaguida/'/>\r\n            <Social icon ='github' link='https://github.com/DSantaguida'/>\r\n          </Row>\r\n        </Container>\r\n      </footer> \r\n    </Container> \r\n\r\n  );\r\n\r\n}\r\n\r\nexport default footer;","import React from 'react';\r\nimport {\r\n  Jumbotron,\r\n  Row,\r\n  Col,\r\n  Container\r\n} from 'react-bootstrap';\r\n\r\nfunction Title(props){\r\n  \r\n  return (\r\n    <Jumbotron className=\"bg-transparent jumbotron-fluid pb-0 pt-3\">\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center border-bottom\">\r\n            {props.title && <h1>{props.title}</h1>}\r\n            {props.subTitle && <h2>{props.subTitle}</h2>}\r\n            {props.text && <h3>{props.text}</h3>}\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n\r\n} export default Title;","import React from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Image\r\n} from 'react-bootstrap';\r\n\r\nfunction About(){\r\n\r\n  return(\r\n    <Container>\r\n      <Row className=\"abPadding\">\r\n        <Col> \r\n          <Row>\r\n            <div className=\"text-left border-left about bodyParagraph\">Hi! My name is Daniel Santaguida. I'm currently a Software Engineering student at York University's Lassonde School of Engineering. My experience in the software industry comes from the internship I completed at IBM, as well as the personal projects I have completed on the side.\r\n            </div>  \r\n          </Row>\r\n          <Row>\r\n            <div className=\"text-left border-left about\">\r\n            I am most experienced programming in Java, but I am also proficient in C, Python, JavaScript, and HTML/CSS. Other tools I have experience using include Git, Gradle, Jenkins, Travis, Docker, Kubernetes, and Artifactory.\r\n            </div>\r\n          </Row>\r\n        </Col>\r\n        <Col className=\"text-center\">\r\n          <Image src=\"/portfolio/me.jpg\" rounded/>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n\r\n  );\r\n\r\n} \r\n\r\nexport default About;","import React from 'react';\r\nimport {\r\n  Container\r\n} from 'react-bootstrap';\r\nimport Title from '../components/Title';\r\nimport About from '../components/About';\r\n\r\nfunction Home(props){\r\n  return (\r\n    <Container fluid={true}>\r\n    <Title title={props.title} subTitle={props.subTitle} text={props.text}/>\r\n\r\n    <About/>\r\n   </Container>\r\n  );\r\n\r\n}\r\nexport default Home","import React from 'react';\r\n\r\nfunction ProjectEntry(props) {\r\n\r\n  return (\r\n    <div className=\"col-md-4 col-sm-6 margin-top\">\r\n      <div className=\"thumbnail\">\r\n        <div class=\"projEntry\">\r\n          <p className=\"text-center description\">{props.description}</p>\r\n          <a href={props.link} className=\"btn button\">\r\n            View project\r\n          </a> \r\n        </div>\r\n        <img class =\"entryImage\" src={props.image} alt=\"Daniel Santaguida's Portfolio\" width=\"390\" height=\"235\"></img>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n\r\n} export default ProjectEntry;","import React from 'react';\r\nimport {\r\n  Container,\r\n  Row\r\n} from 'react-bootstrap';\r\nimport Title from '../components/Title';\r\nimport ProjectEntry from '../components/ProjectEntry';\r\n\r\nfunction Projects(props){\r\n  return (\r\n    <Container fluid={true}>\r\n      <Title title={props.title}/>\r\n      <Row>\r\n        <ProjectEntry link=\"https://github.com/DSantaguida/portfolio/\" description=\"An online portfolio created with React.js, React Bootstrap, React Router, and SendGrid.\" image=\"/portfolio/website.png\"/>\r\n        <ProjectEntry link=\"https://github.com/DSantaguida/\" description=\"An online portfolio created with React.js, React Bootstrap, React Router, and SendGrid.\" image=\"/logo192.png\"/>\r\n        <ProjectEntry link=\"https://github.com/DSantaguida/\" description=\"An online portfolio created with React.js, React Bootstrap, React Router, and SendGrid.\" image=\"/logo192.png\"/>\r\n        <ProjectEntry link=\"https://github.com/DSantaguida/\" description=\"An online portfolio created with React.js, React Bootstrap, React Router, and SendGrid.\" image=\"/logo192.png\"/>\r\n      </Row>\r\n    </Container>\r\n  );\r\n\r\n}\r\nexport default Projects","import React from 'react';\r\nimport Title from '../components/Title'\r\nimport { \r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button\r\n} from 'react-bootstrap';\r\nimport Axios from 'axios';\r\n\r\n\r\nclass Contact extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      message: '',\r\n      result: null,\r\n      isDisabled: false\r\n    }\r\n  }\r\n\r\n  send = (event) => {\r\n    event.preventDefault();\r\n\r\n    console.log(event.target);\r\n\r\n    this.setState({\r\n        disabled: true\r\n    });\r\n\r\n    Axios.post('http://localhost:3030/api/email', this.state)\r\n        .then(res => {\r\n            if(res.data.success) {\r\n                this.setState({\r\n                   isDisabled: true,\r\n                    result: true\r\n                });\r\n            } else {\r\n                this.setState({\r\n                   isDisabled: false,\r\n                    result: false\r\n                });\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n\r\n            this.setState({\r\n                disabled: false,\r\n                emailSent: false\r\n            });\r\n        })\r\n\r\n}\r\n\r\n  update = (event) => {\r\n\r\n    const target = event.target;\r\n    const string = target.value;\r\n    const field = target.name\r\n    \r\n    this.setState({\r\n      [field]: string\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Title title={this.props.title} subTitle={this.props.subTitle}/>\r\n        <Container fluid={true}>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md={8}>\r\n              <Form onSubmit={this.send}>\r\n                <Form.Group>\r\n                  <Form.Label htmlFor='name'>Name:</Form.Label>\r\n                  <Form.Control id='name' name='name' type='text' onChange={this.update} value={this.state.name}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label htmlFor='email'>Email:</Form.Label>\r\n                  <Form.Control id='email' name='email' type='email' onChange={this.update} value={this.state.email}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label htmlFor='message'>Message:</Form.Label>\r\n                  <Form.Control id='message' name='message' rows=\"4\" as='textarea' onChange={this.update} value={this.state.message}/>\r\n                </Form.Group>\r\n                <Button className=\"d-inline-block\" variant=\"primary\" type=\"submit\" disabled={this.state.isDisabled}>\r\n                  Send\r\n                </Button>\r\n\r\n                {this.state.result === true && <p className=\"d-inline emailResult\">Email Sent</p>}\r\n                {this.state.result === false && <p className=\"d-inline emailResult\">Email Failed to Send</p>}\r\n\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n}\r\nexport default Contact","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Navbar,\r\n  Nav\r\n} from 'react-bootstrap'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport './App.css';\r\nimport './bootstrap-social.css';\r\nimport Footer from './components/Footer';\r\nimport Home from './pages/Home';\r\nimport Projects from './pages/Projects';\r\nimport Contact from './pages/Contact';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    library.add(fab)\r\n    this.state = {\r\n      title: 'Daniel Santaguida',\r\n      headerLinks: [\r\n        { title: 'Home', path: '/' },\r\n        { title: 'Projects', path: '/projects' },\r\n        { title: 'Contact', path: '/contact' }\r\n      ],\r\n      home: {\r\n        title: 'About Me',\r\n      },\r\n      projects: {\r\n        title: 'Check out my projects!'\r\n      },\r\n      contact: {\r\n        title: 'Any Questions?',\r\n        subTitle: 'Let\\'s Talk! - Page currently not working'\r\n      }\r\n    }\r\n}\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Router>\r\n        <Container className=\"p-0 background\" fluid={true}>\r\n          <Navbar bg=\"primary\" variant=\"dark\" className=\"border-bottom\" expand=\"lg\">\r\n            <Navbar.Brand>Daniel Santaguida</Navbar.Brand>\r\n            <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\"/>\r\n            <Navbar.Collapse id=\"navbar-toggle\">\r\n              <Nav>\r\n                <Link className=\"nav-link\" to=\"/portfolio\">Home</Link>\r\n                <Link className=\"nav-link\" to=\"/projects\">Projects</Link>\r\n                <Link className=\"nav-link\" to=\"/contact\">Contact</Link>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n          <Route path=\"/portfolio\" exact render={() => <Home title={this.state.home.title} subTitle={this.state.home.subTitle} text={this.state.home.text}/>} /> \r\n          <Route path=\"/projects\" exact render={() => <Projects title={this.state.projects.title}/>} /> \r\n          <Route path=\"/contact\" exact render={() => <Contact title={this.state.contact.title} subTitle={this.state.contact.subTitle}/>} /> \r\n          <Footer/>\r\n        </Container>\r\n\r\n      </Router>\r\n      );\r\n\r\n  }\r\n\r\n \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}